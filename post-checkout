#!/bin/sh
#
# To use this hook create a symlink to this file in the .git/hooks/ directory

# post-checkout
# This hook is invoked when a git checkout is run after having updated the worktree.
# The hook is given three parameters: the ref of the previous HEAD, the ref of the
# new HEAD (which may or may not have changed), and a flag indicating whether the
# checkout was a branch checkout (changing branches, flag=1) or a file checkout
# (retrieving a file from the index, flag=0). This hook cannot affect the outcome of
# git checkout.

oldref="$1"
newref="$2"
branchchange="$3"

filepath="$GIT_DIR/../firmware_src/language.h"

if [ "$branchchange" == 0 ]; then
    echo "Checking out single file, no need to run post-checkout hook"
else
    if [ -f "$filepath" ]; then
        GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
        GIT_TAG=$(git describe --tags --always --match "v[0-9].[0-9]*") #  print out tag or hash if there is no tag
        GIT_HASH=$(git rev-parse --short=7 HEAD)

        sed -i "" "s/#define GIT_TAG \".*/#define GIT_TAG \"$GIT_TAG\"/g" "$filepath"
        sed -i "" "s/#define GIT_BRANCH \".*/#define GIT_BRANCH \"$GIT_BRANCH\"/g" "$filepath"
        sed -i "" "s/#define GIT_HASH \".*/#define GIT_HASH \"$GIT_HASH\"/g" "$filepath"
    else
        echo "$filepath does not exist"
        exit 1
    fi
fi

exit 0
